Short read quality and trimming
===============================

.. shell start

Assessment of sequence quality (FastQC)
---------------------------------------

We're going to use `FastQC <http://www.bioinformatics.babraham.ac.uk/projects/fastqc/>`__ to summarize the data. 
FastQC cans on Fastq files as well as GZip compressed Fastq (.gz) files. The program operates on one file at a time

Now run FastQC on your sequencing file
::
   
   mkdir rawData_fastqc
   fastqc *.fq.gz --outdir=./rawData_fastqc

.. note:: When you pass multiple files to FastQC, it operates a queueing system 
where only one file is opened at a time, and rest of the files will wait until existing 
files have been processed. If your files are big in size, it might be more wise 
to run then in parallel.


Now type 'ls' in the output directory to explore the result files::

   ls ./rawData_fastqc

and you will see ::

   salivary_repl1_R1_fastqc.html
   salivary_repl1_R1_fastqc.zip
   ...

In the root of your terminal, you can copy these files to your laptop and open them in a browser::

   scp <username@hpc.msu.edu>:<workingPath>/rawData_fastqc/salivary*fastqc.* /tmp

and then open the html files in your browser.

Links:

* `FastQC tutorial video <http://www.youtube.com/watch?v=bz93ReOv87Y>`__

Trimmomatic
-----------

Now we're going to do some trimming to remove any leftover adaptor sequences and low quality trailing edges. 
We'll be using `Trimmomatic <http://www.usadellab.org/cms/?page=trimmomatic>`__.
For a discussion of optimal RNAseq trimming strategies, see `MacManes, 2014 
<http://journal.frontiersin.org/Journal/10.3389/fgene.2014.00013/abstract>`__.

To run Trimmomatic
::

   for f in *R1*.gz; do
        input_R1="$f"
        input_R2=$(echo "$f" | sed s/R1/R2/)				                
        output_R1_PE=$(echo "$f" | sed s/R1/R1.pe/)
        output_R1_SE=$(echo "$f" | sed s/R1/R1.se/)
        output_R2_PE=$(echo "$f" | sed s/R1/R2.pe/)		
        output_R2_SE=$(echo "$f" | sed s/R1/R2.se/)		
        java -jar $TRIM/trimmomatic PE $input_R1 $input_R2 \
    $output_R1_PE $output_R1_SE $output_R2_PE $output_R2_SE \
    ILLUMINACLIP:$TRIM/adapters/TruSeq3-PE.fa:2:40:15 \
    LEADING:2 TRAILING:2 \
    SLIDINGWINDOW:4:15 \
    MINLEN:25 &>> log.txt
    # Titus workshop: ILLUMINACLIP:$TRIM/adapters/TruSeq3-PE.fa:2:40:15 LEADING:2 TRAILING:2 SLIDINGWINDOW:4:2
    # my  parameters: ILLUMINACLIP:$TRIM/adapters/TruSeq3-PE.fa:2:30:10:1 SLIDINGWINDOW:4:15
   done

Now type 'ls' in the output directory to explore the result files::

   ls *.fq.gz

and you will see ::

   salivary_repl1_R1.fq.gz
   salivary_repl1_R1.pe.fq.gz
   salivary_repl1_R1.se.fq.gz
   salivary_repl1_R2.fq.gz
   salivary_repl1_R2.pe.fq.gz
   salivary_repl1_R2.se.fq.gz
   ...

Trimming of paired end reads in four output files for each pair input files.
The two output files labeled with (.pe) represnt the reads that are still in the pair end format. 
The other two files labled with (.se) represent the unpaired reads remaining from one input file 
after dropping the corresponding read from the second input file. 

You can check the log file to see how much the trimming affected the data.

For better understanding of the Trimmomatic parameters, you need to check 
`Trimmomatic web page <http://www.usadellab.org/cms/?page=trimmomatic>`__ . 
You might need to teak these parameters for you own data

.. * Are parameters different for RNAseq and genomic?
.. * What do we do with the single-ended files (s1_se and s2_se?)

FastQC again
------------

Run FastQC again
::

   mkdir trimmedData_fastqc
   fastqc *.pe.fq.gz --outdir=./trimmedData_fastqc

.. * Does it matter that you still have adapters!?

.. shell stop

----

Next: :doc:`m-tophat`
