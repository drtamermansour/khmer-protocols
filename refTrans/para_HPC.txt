Submitting jobs to the MSU HPC queue
====================================

In :doc:`m-more-tophat`, we showed you a *shell script*, which was a way
of telling the computer to do multiple things in a row.  We discussed
several advantages to scripting --

1. It automates long-running processes;
2. It tracks what you did, and you can edit it (to modify analyses) and
   also copy it (to do a family of analyses);
3. You can also provide it as part of your Methods in your paper;

There is also a fourth advantage, or really a necessity, to scripting:
it's how you use the MSU HPC to run your computation.  Briefly, to run
a job on the HPC, you create a shell script and then run 'qsub'.

This code will automate making the scripts for each sample files and run the qsub for these scripts::

   mkdir qsub_scripts
   for f in *R1.pe*; do
        input_R1="$f"
        input_R2=$(echo "$f" | sed s/R1/R2/)
        input_R=$(echo "$f" | sed s/R1.pe/R.se/)
        output=$(basename "$f" | cut -f 1,2 -d "_")
        script="./qsub_scripts/"$output"_script.sh"
        printf $input_R1"\n"$input_R2"\n"$input_R"\n"$output"\n"
        echo "#PBS -l walltime=00:30:00,nodes=1:ppn=4,mem=4Gb" >> $script
        echo "module load TopHat2/2.0.12" >> $script
        echo "cd \$PBS_O_WORKDIR" >> $script
        echo "tophat -p 4 -G "$GTF_file" --transcriptome-index "$workingPath/trans_Index/transcriptome" -o $output $Bowtie2Index $input_R1 $input_R2,$input_R" >> $script
        qsub $script
   done
 

You can use 'qstat | grep <username>' to check on your jobs' status.

Back: :doc:`m-tophat`
